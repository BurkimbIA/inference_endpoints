name: BUILD - Docker Image

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to build'
        required: false
        default: 'latest'
        type: string
      push_image:
        description: 'Push image to registry?'
        required: false
        default: true
        type: boolean
      test_build:
        description: 'Run build tests?'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/burkimbia/translation-models

jobs:
  test:
    name: Pre-Build Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.test_build != 'false'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Auto-format with black
      run: |
        black .

    - name: Basic syntax check
      run: |
        python -m py_compile src/handler.py
        python -m py_compile src/inferences.py
        python -m py_compile src/monitoring.py

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test]
    if: always() && (needs.test.result == 'success' || needs.test.result == 'skipped')
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
      build-time: ${{ steps.timing.outputs.build-time }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Start build timer
      id: start-time
      run: echo "start-time=$(date +%s)" >> $GITHUB_OUTPUT
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:master

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=run-${{ github.run_number }}

    - name: Build Docker image (and push to GHCR)
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
    
    - name: Calculate build time
      id: timing
      run: |
        start_time=${{ steps.start-time.outputs.start-time }}
        end_time=$(date +%s)
        build_time=$((end_time - start_time))
        echo "build-time=${build_time}" >> $GITHUB_OUTPUT
        echo "Build completed in ${build_time} seconds"
    
    - name: Build success notification
      run: |
        echo "🎉 BUILD & PUSH SUCCESSFUL!"
        echo "📦 Image: ${{ env.IMAGE_NAME }}"
        echo "🏷️ Tags: ${{ steps.meta.outputs.tags }}"
        echo "⏱️ Build time: ${{ steps.timing.outputs.build-time }} seconds"
        echo ""
        echo "🚀 Votre image est maintenant disponible sur GitHub Container Registry !"
        echo "Pour utiliser: docker pull ${{ env.IMAGE_NAME }}:latest"